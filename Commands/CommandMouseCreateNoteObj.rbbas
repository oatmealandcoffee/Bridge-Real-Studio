#tag ClassProtected Class CommandMouseCreateNoteObjInherits CommandObjImplements Command	#tag Method, Flags = &h21		Private Sub AddRedoRecordObjs()		  return		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Constructor(mParentWindow as WindowEditor)		  // Part of the Command interface.		  		  // Calling the overridden superclass constructor.		  Super.Constructor		  		  		  ParentWindow = mParentWindow		  		  //new notes are always selected on their own, so we grab the selection		  if Ubound(mParentWindow.NoteMgr.Selection) <> -1 then		    ObjectAdded = NoteObj(ParentWindow.NoteMgr.Selection(0))		  else		    #if DebugBuild		      WindowLog.Log("CommandMouseCreateNoteObj.Constructor(): Ubound(mParentWindow.NoteMgr.Selection) = -1")		    #endif		  end if		  		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function Name() As String		  // Part of the Command interface.		  		  #if DebugBuild		    return "CommandMouseCreateNoteObj"		  #else		    return "Add Note"		  #endif		  		  		  		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub Redo()		  // Part of the Command interface.		  		  if ObjectAdded = nil then		    #if DebugBuild		      WindowLog.Log("CommandMouseCreateNoteObj.Redo(): ObjectAdded = nil")		    #endif		    return		  end if		  		  dim Note as NoteObj = NoteObj(ObjectAdded)		  		  //Add to the Notes Array		  ParentWindow.NoteMgr.Notes.Append(Note)		  		  //Try to add to the Note's original track		  if Note.Track <> nil then		    Note.Track.AddObject(Note)		  else		    ParentWindow.TrackListObj1.CurrentTrack.AddObject(Note)		    #if DebugBuild		      WindowLog.Log("CommandMouseCreateNoteObj.Redo(): Note.Track = nil")		    #endif		  end if		  		  ResetSelectionToObjectAffected		  		  UpdateWindow		  		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub ResetSelectionToObjectAffected()		  dim Note as NoteObj = NoteObj(ObjectAdded)		  		  ParentWindow.NoteMgr.ResetSelectionToObject(Note)		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Undo()		  // Part of the Command interface.		  		  if ObjectAdded = nil then 		    #if DebugBuild		      WindowLog.Log("CommandMouseCreateNoteObj.Undo(): ObjectAdded = nil")		    #endif		    return		  end if		  		  dim Note as NoteObj = NoteObj(ObjectAdded)		  		  //remove from the track		  Note.Track.RemoveObject(Note)		  		  //remove from the Notes array		  ParentWindow.NoteMgr.RemoveObjectFromArray(Note)		  		  UpdateWindow		  		  		End Sub	#tag EndMethod	#tag Note, Name = Context		This is the Undo for the single mouse click Add Note command.				We need only add and remove from: 		   ParentWindow.NoteMgr.Notes(-1)		   ParentWindow.TrackListObj1.CurrentTrack.Music(-1)				No groups or chords are affected by this action.			#tag EndNote	#tag ViewBehavior		#tag ViewProperty			Name="Description"			Group="Behavior"			Type="String"			InheritedFrom="CommandObj"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Label"			Group="Behavior"			Type="String"			InheritedFrom="CommandObj"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="MusicObjCount"			Group="Behavior"			InitialValue="0"			Type="Integer"			InheritedFrom="CommandObj"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass