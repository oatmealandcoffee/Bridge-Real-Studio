#tag WindowBegin Window WindowLog   BackColor       =   16777215   Backdrop        =   ""   CloseButton     =   True   Composite       =   False   Frame           =   3   FullScreen      =   False   HasBackColor    =   False   Height          =   256   ImplicitInstance=   True   LiveResize      =   True   MacProcID       =   0   MaxHeight       =   32000   MaximizeButton  =   True   MaxWidth        =   32000   MenuBar         =   1179086674   MenuBarVisible  =   True   MinHeight       =   256   MinimizeButton  =   True   MinWidth        =   480   Placement       =   0   Resizeable      =   True   Title           =   "DebugLog"   Visible         =   True   Width           =   480   Begin TextArea EditField1      AcceptTabs      =   ""      Alignment       =   0      AutoDeactivate  =   True      BackColor       =   16777215      Bold            =   ""      Border          =   True      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Format          =   ""      Height          =   204      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   0      LimitText       =   0      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   True      Mask            =   ""      Multiline       =   True      Password        =   ""      ReadOnly        =   ""      Scope           =   0      ScrollbarHorizontal=   True      ScrollbarVertical=   True      Styled          =   ""      TabIndex        =   0      TabPanelIndex   =   0      TabStop         =   True      Text            =   ""      TextColor       =   0      TextFont        =   "Monaco"      TextSize        =   10      Top             =   0      Underline       =   ""      UseFocusRing    =   True      Visible         =   True      Width           =   480   End   Begin PushButton ShowAllButton      AutoDeactivate  =   True      Bold            =   ""      Cancel          =   ""      Caption         =   "Show All"      Default         =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   209      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   False      LockTop         =   False      Scope           =   0      TabIndex        =   1      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      Top             =   217      Underline       =   ""      Visible         =   True      Width           =   80   End   Begin PushButton ShowLastButton      AutoDeactivate  =   True      Bold            =   ""      Cancel          =   ""      Caption         =   "Show Last"      Default         =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   117      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   False      LockTop         =   False      Scope           =   0      TabIndex        =   2      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      Top             =   217      Underline       =   ""      Visible         =   True      Width           =   80   End   Begin PushButton ClearLogButton      AutoDeactivate  =   True      Bold            =   ""      Cancel          =   ""      Caption         =   "Clear"      Default         =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   301      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   False      LockTop         =   False      Scope           =   0      TabIndex        =   6      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      Top             =   216      Underline       =   ""      Visible         =   True      Width           =   72   End   Begin StaticText CursorValue      AutoDeactivate  =   True      Bold            =   ""      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   45      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   False      LockTop         =   False      Multiline       =   ""      Scope           =   0      TabIndex        =   7      TabPanelIndex   =   0      TabStop         =   True      Text            =   -1      TextAlign       =   1      TextColor       =   0      TextFont        =   "System"      TextSize        =   0      Top             =   217      Underline       =   ""      Visible         =   True      Width           =   60   End   Begin UpDownArrows UpDownArrows1      AcceptFocus     =   False      AutoDeactivate  =   True      Enabled         =   True      Height          =   23      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Left            =   20      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   False      LockTop         =   False      Scope           =   0      TabIndex        =   8      TabPanelIndex   =   0      TabStop         =   True      Top             =   216      Visible         =   True      Width           =   13   End   Begin PushButton LogObjects      AutoDeactivate  =   True      Bold            =   ""      Cancel          =   ""      Caption         =   "Dump"      Default         =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   385      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   False      LockTop         =   ""      Scope           =   0      TabIndex        =   9      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      Top             =   217      Underline       =   ""      Visible         =   True      Width           =   80   EndEnd#tag EndWindow#tag WindowCode	#tag Event		Sub Open()		  dim CurrentWindow as WindowEditor = WindowMgr.CurrentEditor		  		  if CurrentWindow <> nil then		    me.Left = CurrentWindow.Left + CurrentWindow.Width + 20		  else		    me.Left = 950		  end if		End Sub	#tag EndEvent	#tag Method, Flags = &h21		Private Sub AppendObjectDump(theText as String)		  ObjectDump = ObjectDump + theText + EndOfLine		End Sub	#tag EndMethod	#tag Method, Flags = &h21		Private Sub DumpNoteMgr(ParentWindow as WindowEditor)		  dim Tab as string = chr(kTab)		  		  dim NoteMgr as NoteMgrObj = ParentWindow.NoteMgr		  		  if UBound(NoteMgr.Notes) > -1 then		    for each Note as NoteObj in NoteMgr.Notes		      dim NoteDump as string = ""		      NoteDump = NoteDump + kNoteMarker + Note.Description		      if Note.Chord <> nil then		        NoteDump = NoteDump + Tab + kParentMarker + kChordMarker + Note.Chord.Description		      end if		      if Note.Group <> nil then		        NoteDump = NoteDump + Tab + kParentMarker + kGroupMarker + Note.Group.Description		      end if		      if Note.Track <> nil then		        NoteDump = NoteDump + Tab + kParentTrackMarker + Note.Track.Description		      end if		      AppendObjectDump(NoteDump)		    next		  else		    AppendObjectDump("NO NOTES")		  end if		  AppendObjectDump("")		  		  if UBound(NoteMgr.Chords) > -1 then		    For each Chord as ChordObj in NoteMgr.Chords		      dim ChordDump as String = ""		      ChordDump = ChordDump + kChordMarker + Chord.Description		      if Ubound(Chord.Notes) > -1 then		        for each Note as NoteObj in Chord.Notes		          ChordDump = ChordDump + Tab + kNoteMarker + Note.Description		        next		      else		        ChordDump = ChordDump + Tab + "CHORD ERROR! This chord has no notes."		      end if		      if Chord.Group <> nil then		        ChordDump = ChordDump + Tab + kParentMarker + kGroupMarker + Chord.Group.Description		      end if		      if Chord.Track <> nil then		        ChordDump = ChordDump + Tab + kParentTrackMarker + Chord.Track.Description		      end if		      AppendObjectDump(ChordDump)		    Next		  else		    AppendObjectDump("NO CHORDS")		  end if		  AppendObjectDump("")		  		  if UBound(NoteMgr.Groups) > -1 then		    For each Group as GroupObj in NoteMgr.Groups		      dim GroupDump as String = ""		      GroupDump = GroupDump + kGroupMarker + Group.Description		      if Ubound(Group.Objects) > -1 then		        for each Music as MusicObj in Group.Objects		          if Music IsA NoteObj then		            GroupDump = GroupDump + Tab + kNoteMarker		          elseif Music IsA ChordObj then		            GroupDump = GroupDump + Tab + kChordMarker		          elseif Music IsA GroupObj then		            GroupDump = GroupDump + Tab + kGroupMarker		          else		            GroupDump = GroupDump + Tab + kUFOMarker		          end if		          GroupDump = GroupDump + Music.Description		        next		      else		        GroupDump = GroupDump + Tab + "GROUP ERROR! This group has no objects."		      end if		      if Group.Group <> nil then		        GroupDump = GroupDump + Tab + kParentMarker + kGroupMarker + Group.Group.Description		      end if		      if Group.Track <> nil then		        GroupDump = GroupDump + Tab + kParentTrackMarker + Group.Track.Description		      end if		      AppendObjectDump(GroupDump)		    Next		  else		    AppendObjectDump("NO GROUPS")		  end if		  AppendObjectDump("")		  		  if UBound(NoteMgr.Selection) > -1 then		    AppendObjectDump("SELECTION(" + Str(Ubound(NoteMgr.Selection)) + ")")		    for each Music as MusicObj in NoteMgr.Selection		      if Music IsA NoteObj then		        AppendObjectDump(kNoteMarker + Music.Description)		      elseif Music IsA ChordObj then		        AppendObjectDump(kChordMarker + Music.Description)		      elseif Music IsA GroupObj then		        AppendObjectDump(kGroupMarker + Music.Description)		      else		        AppendObjectDump(kUFOMarker + Music.Description)		      end if		    next		  else		    AppendObjectDump("NO SELECTION")		  end if		  AppendObjectDump("")		  		  		End Sub	#tag EndMethod	#tag Method, Flags = &h21		Private Sub DumpTrackList(ParentWindow as WindowEditor)		  dim Tab as string = chr(kTab)		  		  dim TrackList as TrackListObj = ParentWindow.TrackListObj1		  		  dim i as integer		  dim Track as TrackObj		  		  for i = 0 to TrackList.ListCount - 1		    		    dim TrackDump as String = ""		    		    Track = TrackList.CellTag(i, 0)		    		    TrackDump = TrackDump + kTrackMarker + Track.Description		    		    if Ubound(Track.Music) > -1 then		      for each Music as MusicObj in Track.Music		        if Music IsA NoteObj then		          TrackDump = TrackDump + Tab + kNoteMarker		        elseif Music IsA ChordObj then		          TrackDump = TrackDump + Tab + kChordMarker		        elseif Music IsA GroupObj then		          TrackDump = TrackDump + Tab + kGroupMarker		        else		          TrackDump = TrackDump + Tab + kUFOMarker		        end if		        TrackDump = TrackDump + Music.Description		      next		    else		      TrackDump = TrackDump + Tab + "NO MUSIC IN TRACK"		    end if		    		    AppendObjectDump(TrackDump)		  next		  		  AppendObjectDump("")		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Log(theText as string)		  WindowLog.LogText.Append(Str(Ubound(LogText) + 1) + ": " + theText + EndofLine)		  		  LogCursor = Ubound(LogText)		  		  ShowLastLog		  		  WindowLog.Refresh		End Sub	#tag EndMethod	#tag Method, Flags = &h21		Private Sub SerializeObjects(ParentWindow as WindowEditor)		  dim thisObject as integer = 0		  dim firstObject as integer = 0		  dim lastObject as integer = Ubound(ParentWindow.NoteMgr.Notes)		  		  if lastObject > -1 then		    for thisObject = firstObject to lastObject		      if ParentWindow.NoteMgr.Notes(thisObject) <> nil then		        dim mNote as NoteObj = ParentWindow.NoteMgr.Notes(thisObject)		        mNote.Description = "N" + Str(thisObject)		      end if		    next		  end if		  		  thisObject = 0		  firstObject = 0		  lastObject = Ubound(ParentWindow.NoteMgr.Chords)		  		  if lastObject > -1 then		    for thisObject = firstObject to lastObject		      if ParentWindow.NoteMgr.Chords(thisObject) <> nil then		        dim mChord as ChordObj = ParentWindow.NoteMgr.Chords(thisObject)		        mChord.Description = "C" + Str(thisObject)		      end if		    next		  end if		  		  thisObject = 0		  firstObject = 0		  lastObject = Ubound(ParentWindow.NoteMgr.Groups)		  		  if lastObject > -1 then		    for thisObject = firstObject to lastObject		      if ParentWindow.NoteMgr.Groups(thisObject) <> nil then		        dim mGroup as GroupObj = ParentWindow.NoteMgr.Groups(thisObject)		        mGroup.Description = "G" + Str(thisObject)		      end if		    next		  end if		  		  thisObject = 0		  firstObject = 0		  lastObject = Ubound(ParentWindow.NoteMgr.Selection)		  		  if lastObject > -1 then		    for thisObject = firstObject to lastObject		      if ParentWindow.NoteMgr.Selection(thisObject) <> nil then		        dim mObject as MusicObj = ParentWindow.NoteMgr.Selection(thisObject)		        mObject.Description = mObject.Description + "s" + Str(thisObject)		      end if		    next		  end if		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub ShowCompleteLog()		  dim lastLogItem as integer = Ubound(LogText)		  if lastLogItem = -1 then return		  		  dim thisLogItem as integer = 0		  dim firstLogItem as integer = 0		  		  EditField1.Text = Join(LogText, "")		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub ShowCursorLog(CursorValue as integer)		  dim lastLogItem as integer = Ubound(LogText)		  if lastLogItem = -1 then return		  		  EditField1.Text = LogText(CursorValue)		  self.CursorValue.Text = str(CursorValue)		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub ShowLastLog()		  dim lastLogItem as integer = Ubound(LogText)		  if lastLogItem = -1 then return		  		  EditField1.Text = LogText(lastLogItem)		End Sub	#tag EndMethod	#tag ComputedProperty, Flags = &h0		#tag Getter			Get			  return mLogcursor			End Get		#tag EndGetter		#tag Setter			Set			  dim lastLogItem as integer = Ubound(LogText)			  			  mLogcursor = value			  			  if mLogcursor > lastLogItem then mLogcursor = lastLogItem			  if mLogcursor < 0 then mLogcursor = 0			  			  self.CursorValue.Text = Str(LogCursor)			  			  			End Set		#tag EndSetter		LogCursor As Integer	#tag EndComputedProperty	#tag Property, Flags = &h0		LogText(-1) As String	#tag EndProperty	#tag Property, Flags = &h21		Private mLogcursor As Integer	#tag EndProperty	#tag Property, Flags = &h21		Private ObjectDump As String	#tag EndProperty	#tag Constant, Name = kChordMarker, Type = String, Dynamic = False, Default = \"C", Scope = Private	#tag EndConstant	#tag Constant, Name = kCommandMarker, Type = String, Dynamic = False, Default = \"K", Scope = Private	#tag EndConstant	#tag Constant, Name = kGroupMarker, Type = String, Dynamic = False, Default = \"G", Scope = Private	#tag EndConstant	#tag Constant, Name = kMusicObjMarker, Type = String, Dynamic = False, Default = \"m", Scope = Private	#tag EndConstant	#tag Constant, Name = kNoteMarker, Type = String, Dynamic = False, Default = \"N", Scope = Private	#tag EndConstant	#tag Constant, Name = kParentMarker, Type = String, Dynamic = False, Default = \"p", Scope = Private	#tag EndConstant	#tag Constant, Name = kParentTrackMarker, Type = String, Dynamic = False, Default = \"t", Scope = Private	#tag EndConstant	#tag Constant, Name = kTab, Type = Double, Dynamic = False, Default = \"9", Scope = Private	#tag EndConstant	#tag Constant, Name = kTrackMarker, Type = String, Dynamic = False, Default = \"T", Scope = Private	#tag EndConstant	#tag Constant, Name = kUFOMarker, Type = String, Dynamic = False, Default = \"\?", Scope = Private	#tag EndConstant#tag EndWindowCode#tag Events ShowAllButton	#tag Event		Sub Action()		  ShowCompleteLog		End Sub	#tag EndEvent#tag EndEvents#tag Events ShowLastButton	#tag Event		Sub Action()		  ShowLastLog		End Sub	#tag EndEvent#tag EndEvents#tag Events ClearLogButton	#tag Event		Sub Action()		  redim LogText(-1)		  		  LogCursor = Ubound(LogText)		  		  EditField1.Text = ""		End Sub	#tag EndEvent#tag EndEvents#tag Events UpDownArrows1	#tag Event		Sub Down()		  LogCursor = LogCursor - 1		  ShowCursorLog(LogCursor)		End Sub	#tag EndEvent	#tag Event		Sub Up()		  LogCursor = LogCursor + 1		  ShowCursorLog(LogCursor)		End Sub	#tag EndEvent#tag EndEvents#tag Events LogObjects	#tag Event		Sub Action()		  dim ParentWindow as WindowEditor = WindowMgr.CurrentEditor		  		  ObjectDump = ""		  		  AppendObjectDump("Object Dump [" + Str(ObjectCount) + "]")		  		  DumpNoteMgr(ParentWindow)		  DumpTrackList(ParentWindow)		  		  EditField1.Text = ObjectDump		  		  Log(ObjectDump)		End Sub	#tag EndEvent#tag EndEvents